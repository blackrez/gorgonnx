digraph fullGraph {
	nodesep=1;
	rankdir=TB;
	ranksep="1.5 equally";
	Node_0xc00018b860:Node_0xc00018b860:anchor->Node_0xc0011892b0:Node_0xc0011892b0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00018b860:Node_0xc00018b860:anchor->Node_0xc0011881a0:Node_0xc0011881a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0011891e0:Node_0xc0011891e0:anchor->Node_0xc0011881a0:Node_0xc0011881a0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0011891e0:Node_0xc0011891e0:anchor->Node_0xc001189040:Node_0xc001189040:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0011892b0:Node_0xc0011892b0:anchor->Node_0xc0011891e0:Node_0xc0011891e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	outsideRoot->insideInputs[ constraint=false, style=invis, weight=999 ];
	outsideConsts->insideConsts[ constraint=false, style=invis, weight=999 ];
	outsideRoot->outsideConsts[ constraint=false, style=invis, weight=999 ];
	insideInputs->insideConsts[ constraint=false, style=invis, weight=999 ];
	outsideExprG->insideExprG[ constraint=false, style=invis, weight=999 ];
	outsideConsts->outsideExprG[ constraint=false, style=invis, weight=999 ];
	insideConsts->insideExprG[ constraint=false, style=invis, weight=999 ];
	subgraph cluster_expressionGraph {
	label=expressionGraph;
	Node_0xc00018b860 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>9</TD><TD>+ false(%3, %0) :: Vector float64</TD></TR>
<TR><TD>Op</TD><TD>+ false :: a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(2)</TD></TR>
<TR><TD>Overwrites Input 1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0011891e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>2</TD><TD>+ false(%0, %1) :: Vector float64</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(2)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Vector (2) [1]<BR />[  3    9]</TD><TD>Vector (2) [1]<BR />[  1    1] </TD></TR>
<TR><TD>Ptr: 0x824640719328x </TD><TD>Ptr: 0xc0003420a0 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0011892b0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>3</TD><TD>Σ[0](%2) :: float64</TD></TR>
<TR><TD>Op</TD><TD>Σ[0] :: Vector a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>float64  12</TD><TD>float64   1 </TD></TR>
<TR><TD>Ptr: 0x824640719384x </TD><TD>Ptr: 0xc0006aca58 </TD></TR>


</TABLE>
>, shape=none ];
	insideExprG [ style=invis ];

}
;
	subgraph inputConsts {
	rank=max;
	subgraph cluster_constants {
	label=constants;
	insideConsts [ style=invis ];

}
;
	subgraph cluster_inputs {
	label=inputs;
	Node_0xc0011881a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>0</TD><TD>x :: Vector float64</TD></TR>

<TR><TD>Shape</TD><TD>(2)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Vector (2) [1]<BR />[  1    5]</TD><TD>Vector (2) [1]<BR />[  3    3] </TD></TR>
<TR><TD>Ptr: 0x824640611888x </TD><TD>Ptr: 0xc000342010 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc001189040 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>1</TD><TD>y :: Vector float64</TD></TR>

<TR><TD>Shape</TD><TD>(2)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Vector (2) [1]<BR />[  2    4]</TD><TD>Vector (2) [1]<BR />[  3    3] </TD></TR>
<TR><TD>Ptr: 0x824640611904x </TD><TD>Ptr: 0xc000342040 </TD></TR>


</TABLE>
>, shape=none ];
	insideInputs [ style=invis ];

}
;

}
;
	subgraph outsides {
	outsideConsts [ style=invis ];
	outsideExprG [ style=invis ];
	outsideRoot [ style=invis ];

}
;

}
